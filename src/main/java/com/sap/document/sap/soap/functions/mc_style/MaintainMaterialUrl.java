package com.sap.document.sap.soap.functions.mc_style;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.BindingType;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.soap.SOAPBinding;

/**
 * This class was generated by Apache CXF 2.6.8
 * 2015-03-25T01:58:22.710-04:00
 * Generated source version: 2.6.8
 *
 */

@WebServiceClient(name = "maintain_material_url",
                  wsdlLocation = "file:maintain_material_url.wsdl",
                  targetNamespace = "urn:sap-com:document:sap:soap:functions:mc-style")
@BindingType(value = SOAPBinding.SOAP11HTTP_BINDING)
public class MaintainMaterialUrl extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("urn:sap-com:document:sap:soap:functions:mc-style", "maintain_material_url");
    public final static QName Binding = new QName("urn:sap-com:document:sap:soap:functions:mc-style", "binding");
    public final static QName BindingSOAP12 = new QName("urn:sap-com:document:sap:soap:functions:mc-style", "binding_SOAP12");
    static {
        URL url = null;
        try {
            url = new URL("file:maintain_material_url.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(MaintainMaterialUrl.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:maintain_material_url.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public MaintainMaterialUrl(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public MaintainMaterialUrl(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MaintainMaterialUrl() {
        super(WSDL_LOCATION, SERVICE);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public MaintainMaterialUrl(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public MaintainMaterialUrl(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public MaintainMaterialUrl(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns ZusWebsrvMaintainMatUrl
     */
    @WebEndpoint(name = "binding")
    public ZusWebsrvMaintainMatUrl getBinding() {
        return super.getPort(Binding, ZusWebsrvMaintainMatUrl.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ZusWebsrvMaintainMatUrl
     */
    @WebEndpoint(name = "binding")
    public ZusWebsrvMaintainMatUrl getBinding(WebServiceFeature... features) {
        return super.getPort(Binding, ZusWebsrvMaintainMatUrl.class, features);
    }
    /**
     *
     * @return
     *     returns ZusWebsrvMaintainMatUrl
     */
    @WebEndpoint(name = "binding_SOAP12")
    public ZusWebsrvMaintainMatUrl getBindingSOAP12() {
        return super.getPort(BindingSOAP12, ZusWebsrvMaintainMatUrl.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ZusWebsrvMaintainMatUrl
     */
    @WebEndpoint(name = "binding_SOAP12")
    public ZusWebsrvMaintainMatUrl getBindingSOAP12(WebServiceFeature... features) {
        return super.getPort(BindingSOAP12, ZusWebsrvMaintainMatUrl.class, features);
    }

}
